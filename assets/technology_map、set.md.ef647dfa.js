import{_ as e,c as a,o as t,O as s}from"./chunks/framework.0d343703.js";const u=JSON.parse('{"title":"Map、Set","description":"","frontmatter":{"title":"Map、Set","date":"2021-08-25T15:45:00.000Z","summary":"ES6总结","tags":["ES6"]},"headers":[],"relativePath":"technology/map、set.md"}'),r={name:"technology/map、set.md"},o=s('<h1 id="map、set" tabindex="-1">map、set <a class="header-anchor" href="#map、set" aria-label="Permalink to &quot;map、set&quot;">​</a></h1><h2 id="set-集合" tabindex="-1">set：集合 <a class="header-anchor" href="#set-集合" aria-label="Permalink to &quot;set：集合&quot;">​</a></h2><p>集合 : 无序且唯一的项，类似于没有重复元素和顺序的数组。</p><p>其构造函数也为set() 故可以直接用它进行生成set数据结构。</p><h3 id="属性和方法" tabindex="-1">属性和方法 <a class="header-anchor" href="#属性和方法" aria-label="Permalink to &quot;属性和方法&quot;">​</a></h3><p>size ：返回数量，类似数组length</p><p>add():添加 delete()：移除 has():返回布尔值，有=&gt;true clear():移除集合中所有的项目(清空set)</p><p>keys():返回集合中键的数组（类似于对象） values():返回集合中值的数组（类似于对象） entries():返回包含键值对的数组 （对象也有该方法） forEach():类数组</p><h2 id="map-字典" tabindex="-1">map:字典 <a class="header-anchor" href="#map-字典" aria-label="Permalink to &quot;map:字典&quot;">​</a></h2><p>字典：以key=&gt;value 的形式存储。主要存储数据，保证了值=&gt;值。</p><h3 id="属性和方法-1" tabindex="-1">属性和方法 <a class="header-anchor" href="#属性和方法-1" aria-label="Permalink to &quot;属性和方法&quot;">​</a></h3><p>size ：返回字典元素个数，类似数组length</p><p>set(key,val):添加 delete(key)：移除 has(key):返回布尔值，有=&gt;true,valueOf() clear():移除集合中所有的项目(清空set) get(key):查找方法</p><p>keys():返回集合中键的数组（类似于对象） values():返回集合中值的数组（类似于对象） forEach():类数组</p>',14),l=[o];function p(h,n,i,c,d,_){return t(),a("div",null,l)}const f=e(r,[["render",p]]);export{u as __pageData,f as default};
